@using KWSAdmin.Persistence.Interface.Dtos
@model AspView.Models.OrderViewModel

@{
    ViewData["Title"] = "Create Order";
}




<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md">
        <form asp-action="CreateOrder">@*todo uitzoeken wat dit doet*@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div>Location:@Html.DropDownListFor(m => m.Location, new SelectList(Enum.GetValues(typeof(Location))))</div>

            <div>Client:@Html.DropDownListFor(m => m.ClientId, new SelectList(Model.Clients,"Id","LastName")) <a asp-action="AddClient" asp-controller="Client">Add new Client</a> </div>

            <div>Accu:@Html.DropDownListFor(m => m.AccuId, new SelectList(Model.Accus,"Id","Name")) <a asp-action="AddAccu" asp-controller="Accu">Add new Accu</a> </div>

            <div class="col-sm-3">
                <div class="form-group">
                   <div> @Html.LabelFor(model => model.Info)</div>
                   <div>  @Html.TextAreaFor(model => model.Info)</div>
                    <span asp-validation-for="Info" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="Home">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


